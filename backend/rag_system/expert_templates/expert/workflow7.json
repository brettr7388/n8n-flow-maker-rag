{
  "name": "5 Automate Instagram Carousels with AI Chat",
  "nodes": [
    {
      "parameters": {
        "content": "# FULL TUTORIAL\n\n## Tutorial\n\nhttps://help.blotato.com/api/templates/5-automate-instagram-carousels-with-ai-chat\n\n## Description\n\nThis AI Agent Carousel Maker uses ChatGPT and Blotato to write, generate, and auto-post social media carousels to 5 social platforms: Instagram, Tiktok, Facebook, Twitter, and Pinterest. Simply chat with the AI agent, confirm which prebuilt viral carousel template you want to use, then the AI Agent populates the template with your personalized information and quotes, and posts to social media on autopilot. This is perfect for entrepreneurs, small businesses, content creators, digital marketing agencies, social media marketing agencies, and influencers.\n\n## Overview\n\n**1. Chat: AI Agent Carousel Maker**\n- Chat with AI agent about your desired carousel\n- Confirm quotes and carousel template to use\n\n**2. Carousel Generation**\n- AI agent calls corresponding Blotato tool to generate carousel\n- Wait and fetch completed carousel\n\n**3. Publish to Social Media via Blotato**\n- Choose your social accounts\n- Either post immediately or schedule for later",
        "height": 720,
        "width": 864,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1696,
        -160
      ],
      "typeVersion": 1,
      "id": "9dd8d850-49db-4c1a-91f4-6b074be00992",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# Error Report\n\n👉 View run logs and results.\n\n👉 API Dashboard:\n https://my.blotato.com/api-dashboard",
        "height": 192,
        "width": 288,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        912,
        1184
      ],
      "typeVersion": 1,
      "id": "cddce017-9294-4e86-81db-f0ade8faad28",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "numberInputs": 5
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1008,
        896
      ],
      "id": "b4448822-1a9c-4fdb-8488-461f194ae4a5",
      "name": "Error Report",
      "notesInFlow": false
    },
    {
      "parameters": {
        "content": "# Platform Specific Notes\n\n## Tiktok\nYou can post images, videos, and slideshows. Your Tiktok account must be warmed up before using Blotato, otherwise you'll get low views. [Follow this warm up guide](https://help.blotato.com/platforms/tiktok/brand-new-accounts). \n\nCheck out best practices and troubleshooting FAQs:\nhttps://help.blotato.com/platforms/tiktok\n\n## Linkedin\nYou can post text, images, videos, and PDF carousels. Check out best practices and troubleshooting FAQs:\nhttps://help.blotato.com/platforms/linkedin\n\n## Facebook\nYou can post text, images, regular videos, and reels. Check out best practices and troubleshooting FAQs\nhttps://help.blotato.com/platforms/facebook\n\n## Instagram\nYou can post images, reels, stories, and slideshows. Check out best practices and troubleshooting FAQs:\nhttps://help.blotato.com/platforms/instagram\n\n## Twitter\nYou can post text, images, and videos. You can post a long-form thread by clicking \"Show Advanced Settings\". Check out best practices and troubleshooting FAQs:\nhttps://help.blotato.com/platforms/twitter\n\n## Threads\nYou can post text, images, and videos. You can post a long-form thread by clicking \"Show Advanced Settings\". Check out best practices and troubleshooting FAQs:\nhttps://help.blotato.com/platforms/threads\n\n## Bluesky\nYou can post text, images, and videos. You can post a long-form thread by clicking \"Show Advanced Settings\". Check out best practices and troubleshooting FAQs:\nhttps://help.blotato.com/platforms/bluesky\n\n## Youtube\nYou can post Youtube shorts and long-form videos. You don't need to do anything. Youtube automatically posts Shorts if your video is <2 minutes and 9:16 aspect ratio.\n\nBrand new Youtube accounts are limited to a few posts per day via API. You can still upload manually through Youtube website. This restriction is directly from Youtube and is gradually lifted as you post consistently.\n\nCheck out best practices and troubleshooting FAQs:\nhttps://help.blotato.com/platforms/youtube\n\n## Pinterest\nYou can post image and video pins. You must warm up your Pinterest account by posting a few pins per day, gradually ramping up.\n\nHow to Get Your Pinterest Board ID:\nGo to Blotato, create a Pinterest post, click Publish, and you'll see your board IDs. Copy board ID to here.\n\nCheck out best practices and troubleshooting FAQs:\nhttps://help.blotato.com/platforms/pinterest\n\n## Need More Help?\n\nLog into Blotato.com\nClick support button in bottom right corner.\nSabrina Ramonov🍄 replies within 24 hours most weekdays.",
        "height": 1632,
        "width": 608,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1360,
        -32
      ],
      "id": "65ff96f7-61dd-453e-ae62-2da65694275b",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "# Setup 2\n1. Open each node\n2. Select your social account\n3. Deactivate platforms you don't need\n3. 👉 **You don't need to do anything else!**",
        "height": 176,
        "width": 320,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        464,
        304
      ],
      "id": "a650da92-1f9d-4dc9-b3ca-68dec241e2c0",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "# Post Everywhere via Blotato\n\n## IMPORTANT\nDo not post the same image/video over and over again, otherwise it will be flagged as spam. Make sure to disclose AI generated content if you're using avatars.\n\n👉  **Blotato API Docs**: https://help.blotato.com/api\n✅  **Troubleshoot Errors**: https://my.blotato.com/api-dashboard\n📷  **Media Requirements**: https://help.blotato.com/api/media\n🛠️  **Contact help**: log into blotato > click support button in bottom right corner",
        "height": 1632,
        "width": 912,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        336,
        -32
      ],
      "id": "d957246a-ae48-4475-9026-4a73b62dd73b",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "content": "# Create Instagram Carousel via ChatGPT & Blotato",
        "height": 1028,
        "width": 1168,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1696,
        672
      ],
      "id": "284371c7-191a-4287-bc5e-ef7974e06771",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Troubleshooting Blotato Templates\n\n- View all video/carousel templates available: https://my.blotato.com/videos/new\n- DO NOT edit the 'quotes' parameter unless you're an n8n expert\n- When adding a new template, DO NOT duplicate an existing node. Instead, click '+ Tool' > Blotato Tool > Video > Create > select new template. This ensures template parameters are correctly loaded.",
        "height": 212,
        "width": 662,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1264,
        1440
      ],
      "id": "f0f826e9-aff8-4cc4-ade8-29508cdf87f6",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "content": "# Setup\n\n- Sign up for OpenAPI API access and create credential\n- Sign up for Blotato.com\n- Generate Blotato API Key by going to Settings > API > Generate API Key (paid feature only)\n- Create Blotato credential\n- If you're using n8n, ensure you have \"Verified Community Nodes\" enabled in your n8n Admin Panel. Then, install \"Blotato\" verified community node.\n- Click \"Open chat\" to test workflow\n- Complete the 2 SETUP sticky notes in BROWN in this template\n- AFTER your first successful run, open each carousel template tool call (i.e. pink nodes attached to AI Agent Carousel Maker) and tweak the parameters, but DO NOT change \"quotes\" parameter unless you're an n8n expert.\n\n## Tips and Tricks\n\n- While testing: enable only 1 social platform, and deactivate the rest for testing purposes. Add optional parameter 'scheduledTime' so that you don't accidentally post to social media. Check your content calendar here: https://my.blotato.com/queue/schedules\n- Check how your carousels look in Blotato app: https://my.blotato.com/videos\n- You can browse all video/carousel templates and get a sense of how they work by making them in the Blotato web app first: https://my.blotato.com/videos\n- When adding a new template, DO NOT duplicate an existing node. Instead, click '+ Tool' > Blotato Tool > Video > Create > select new template. This ensures template parameters are correctly loaded.",
        "height": 720,
        "width": 896,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -720,
        -160
      ],
      "typeVersion": 1,
      "id": "fa052877-db65-4af0-9152-06259841ccdc",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "platform": "tiktok",
        "accountId": {
          "__rl": true,
          "value": "199",
          "mode": "list",
          "cachedResultName": "sabrina_ramonov",
          "cachedResultUrl": "https://backend.blotato.com/v2/accounts/199"
        },
        "postContentText": "={{ $('AI Agent Carousel Maker').item.json.output.parseJson().caption }}",
        "postContentMediaUrls": "={{ $('Get carousel').item.json.item.imageUrls }}",
        "postCreateTiktokOptionTitle": "={{ $('AI Agent Carousel Maker').item.json.output.parseJson().title }}",
        "postCreateTiktokOptionAutoAddMusic": true,
        "options": {}
      },
      "type": "@blotato/n8n-nodes-blotato.blotato",
      "typeVersion": 2,
      "position": [
        576,
        544
      ],
      "id": "ec20b1c6-87b5-41a4-99d4-07a08e85a49f",
      "name": "Tiktok [BLOTATO]",
      "retryOnFail": false,
      "maxTries": 2,
      "waitBetweenTries": 3000,
      "credentials": {
        "blotatoApi": {
          "id": "zI14DNda55rFeyY8",
          "name": "[S BRAND] Blotato"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "platform": "facebook",
        "accountId": {
          "__rl": true,
          "value": "369",
          "mode": "list",
          "cachedResultName": "Sabrina Ramonov",
          "cachedResultUrl": "https://backend.blotato.com/v2/accounts/369"
        },
        "postContentText": "={{ $('AI Agent Carousel Maker').item.json.output.parseJson().caption }}",
        "postContentMediaUrls": "={{ $('Get carousel').item.json.item.imageUrls }}",
        "facebookPageId": {
          "__rl": true,
          "value": "161711670360847",
          "mode": "list",
          "cachedResultName": "Blotato",
          "cachedResultUrl": "https://backend.blotato.com/v2/accounts/369/subaccounts/161711670360847"
        },
        "options": {}
      },
      "type": "@blotato/n8n-nodes-blotato.blotato",
      "typeVersion": 2,
      "position": [
        576,
        752
      ],
      "id": "cbd3819d-b7c2-43d5-b48e-371e497b85d5",
      "name": "Facebook [BLOTATO]",
      "credentials": {
        "blotatoApi": {
          "id": "zI14DNda55rFeyY8",
          "name": "[S BRAND] Blotato"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "accountId": {
          "__rl": true,
          "value": "28",
          "mode": "list",
          "cachedResultName": "sabrina_ramonov",
          "cachedResultUrl": "https://backend.blotato.com/v2/accounts/28"
        },
        "postContentText": "={{ $('AI Agent Carousel Maker').item.json.output.parseJson().caption }}",
        "postContentMediaUrls": "={{ $('Get carousel').item.json.item.imageUrls }}",
        "options": {}
      },
      "type": "@blotato/n8n-nodes-blotato.blotato",
      "typeVersion": 2,
      "position": [
        576,
        960
      ],
      "id": "247b2fd5-bd56-45e7-a9f4-e8bc4b5a8704",
      "name": "Instagram [BLOTATO]",
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 5000,
      "credentials": {
        "blotatoApi": {
          "id": "zI14DNda55rFeyY8",
          "name": "[S BRAND] Blotato"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "platform": "twitter",
        "accountId": {
          "__rl": true,
          "value": "38",
          "mode": "list",
          "cachedResultName": "Sabrina_Ramonov",
          "cachedResultUrl": "https://backend.blotato.com/v2/accounts/38"
        },
        "postContentText": "={{ $('AI Agent Carousel Maker').item.json.output.parseJson().caption }}",
        "postContentMediaUrls": "={{ $('Get carousel').item.json.item.imageUrls }}",
        "options": {}
      },
      "type": "@blotato/n8n-nodes-blotato.blotato",
      "typeVersion": 2,
      "position": [
        576,
        1168
      ],
      "id": "f2e6ca67-0c23-42b9-9cc2-d9e7bc0e8fb6",
      "name": "Twitter [BLOTATO]",
      "credentials": {
        "blotatoApi": {
          "id": "zI14DNda55rFeyY8",
          "name": "[S BRAND] Blotato"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "video",
        "operation": "get",
        "videoId": "={{ $('If quotes ready').item.json.output.parseJson().id }}"
      },
      "type": "@blotato/n8n-nodes-blotato.blotato",
      "typeVersion": 2,
      "position": [
        -144,
        976
      ],
      "id": "66f42867-3b79-41f2-8665-b0f7fc58620b",
      "name": "Get carousel",
      "credentials": {
        "blotatoApi": {
          "id": "zI14DNda55rFeyY8",
          "name": "[S BRAND] Blotato"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "responseMode": "responseNodes"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -1616,
        976
      ],
      "id": "61833e96-598f-40ff-9f7e-e65f835dd821",
      "name": "When chat message received",
      "webhookId": "cc24bc37-7fd1-41ee-88b8-b7194b555ba3"
    },
    {
      "parameters": {
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -1456,
        1216
      ],
      "id": "f320b7f9-1ac4-4893-9a0f-011dee07f81b",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "message": "={{ $json.output }}",
        "waitUserReply": false,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chat",
      "typeVersion": 1,
      "position": [
        -752,
        1056
      ],
      "id": "8e228748-3124-494e-920a-6cd7922380be",
      "name": "Respond to Chat"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -320,
        976
      ],
      "id": "323c3f87-16e3-41c6-91a0-1f2ba7cb2469",
      "name": "Wait",
      "webhookId": "cc59ec13-c7ae-49b5-b7ad-711079e3121e",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "1be77713-67d6-46a2-8e95-9284aaea62f1",
              "leftValue": "={{ (() => { try { const o = JSON.parse($('AI Agent Carousel Maker').item.json.output); return typeof o === 'object' && o !== null && 'id' in o; } catch { return false; } })() }}",
              "rightValue": "id",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1008,
        976
      ],
      "id": "cfd4de69-9874-4616-9331-050737304b72",
      "name": "If quotes ready"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "# TASK\n\nYour task is to analyze the user's request, research the topic, and write a list of Instagram carousel containing quotes related to the user's request. \n\n# TOOLS\n\nYou have access to tools that allow you to make Instagram carousels, simply by specific a few parameters. Each tool corresponds to a different Instagram carousel template. Select the appropriate tool, then you SHOULD call it EXACTLY ONCE.\n\nWhen you call a tool, `quotes` must be an array of strings, delimited by newlines or |.\n```\n\nImportant: BEFORE making the tool call to generate the Instagram carousel, you SHOULD always confirm with the user:\n- list of quotes\n- carousel template\n\n# OUTPUT\n\nYou SHOULD always output the following format, where `id` contains the video id returned by the tool call. Leave `id` as an empty string \"\" if you did not make a carousel:\n\n{\n\t\"output\": \"Output from AI\",\n        \"caption\": \"Long carousel caption, 300 characters max\",\n        \"title\": \"Short carousel title, 8 words max\"\n\t\"id\": 1234\n}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -1408,
        976
      ],
      "id": "aa89e6b3-2e6d-4a0b-a9e6-a64d4c2ec257",
      "name": "AI Agent Carousel Maker"
    },
    {
      "parameters": {
        "resource": "video",
        "templateId": {
          "__rl": true,
          "value": "/base/v2/tweet-card/ba413be6-a840-4e60-8fd6-0066d3b427df/v1",
          "mode": "list",
          "cachedResultName": "Twitter/X style quote cards with minimal style"
        },
        "templateInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "verified": true,
            "quotes": "={{ $fromAI('Quotes__e_g____item_1____item_2___', ``, 'string').split(/\\n|\\|/).map(s => s.trim()).filter(Boolean) }}",
            "authorName": "Sabrina Ramonov",
            "handle": "sabrina_ramonov",
            "aspectRatio": "4:5",
            "profileImage": "https://media.licdn.com/dms/image/v2/D5603AQEm4F3RHWnZ8w/profile-displayphoto-shrink_200_200/profile-displayphoto-shrink_200_200/0/1713795109052?e=2147483647&v=beta&t=dIuWBN1_U-vy1lccFxB65cRFWBOojkOghbKGmqZXXnc",
            "theme": "dark"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "quotes",
              "displayName": "Quotes (e.g. [\"item 1\", \"item 2\"])",
              "required": false,
              "defaultMatch": false,
              "type": "string",
              "display": true,
              "canBeUsedToMatch": false
            },
            {
              "id": "authorName",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "type": "string",
              "display": true,
              "canBeUsedToMatch": false
            },
            {
              "id": "handle",
              "displayName": "Social Media Handle",
              "required": false,
              "defaultMatch": false,
              "type": "string",
              "display": true,
              "canBeUsedToMatch": false
            },
            {
              "id": "profileImage",
              "displayName": "Profile Photo URL (publicly accessible URL)",
              "required": false,
              "defaultMatch": false,
              "type": "string",
              "display": true,
              "canBeUsedToMatch": false
            },
            {
              "id": "verified",
              "displayName": "Show Verified Badge",
              "required": false,
              "defaultMatch": false,
              "type": "boolean",
              "display": true,
              "canBeUsedToMatch": false
            },
            {
              "id": "theme",
              "displayName": "Theme",
              "required": false,
              "defaultMatch": false,
              "type": "options",
              "display": true,
              "canBeUsedToMatch": false,
              "options": [
                {
                  "name": "Dark",
                  "value": "dark"
                },
                {
                  "name": "Light",
                  "value": "light"
                }
              ],
              "removed": false
            },
            {
              "id": "aspectRatio",
              "displayName": "Aspect Ratio",
              "required": false,
              "defaultMatch": false,
              "type": "options",
              "display": true,
              "canBeUsedToMatch": false,
              "options": [
                {
                  "name": "4:5",
                  "value": "4:5"
                },
                {
                  "name": "1:1",
                  "value": "1:1"
                },
                {
                  "name": "9:16",
                  "value": "9:16"
                }
              ]
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@blotato/n8n-nodes-blotato.blotatoTool",
      "typeVersion": 2,
      "position": [
        -1248,
        1264
      ],
      "id": "03ab0521-b209-4796-a903-dc5c369b9258",
      "name": "Simple tweet cards monocolor",
      "credentials": {
        "blotatoApi": {
          "id": "zI14DNda55rFeyY8",
          "name": "[S BRAND] Blotato"
        }
      }
    },
    {
      "parameters": {
        "resource": "video",
        "templateId": {
          "__rl": true,
          "value": "/base/v2/quote-card/77f65d2b-48cc-4adb-bfbb-5bc86f8c01bd/v1",
          "mode": "list",
          "cachedResultName": "Quote Card Carousel with Monocolor Paper Background"
        },
        "templateInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "quotes": "={{ $fromAI('Quotes__e_g____item_1____item_2___', ``, 'string').split(/\\n|\\|/).map(s => s.trim()).filter(Boolean) }}",
            "title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Title', `String that will appear on 1st slide of carousel`, 'string') }}",
            "font": "Philosopher"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "font",
              "displayName": "Font",
              "required": false,
              "defaultMatch": false,
              "type": "options",
              "display": true,
              "canBeUsedToMatch": false,
              "options": [
                {
                  "name": "Inter",
                  "value": "Inter"
                },
                {
                  "name": "Merriweather",
                  "value": "Merriweather"
                },
                {
                  "name": "Roboto Mono",
                  "value": "Roboto Mono"
                },
                {
                  "name": "VT323",
                  "value": "VT323"
                },
                {
                  "name": "Montserrat",
                  "value": "Montserrat"
                },
                {
                  "name": "Quicksand",
                  "value": "Quicksand"
                },
                {
                  "name": "Philosopher",
                  "value": "Philosopher"
                },
                {
                  "name": "Poppins",
                  "value": "Poppins"
                },
                {
                  "name": "Raleway",
                  "value": "Raleway"
                },
                {
                  "name": "Open Sans",
                  "value": "Open Sans"
                },
                {
                  "name": "Lato",
                  "value": "Lato"
                },
                {
                  "name": "Oswald",
                  "value": "Oswald"
                },
                {
                  "name": "Playfair Display",
                  "value": "Playfair Display"
                },
                {
                  "name": "Roboto",
                  "value": "Roboto"
                },
                {
                  "name": "PT Sans",
                  "value": "PT Sans"
                },
                {
                  "name": "DM Sans",
                  "value": "DM Sans"
                },
                {
                  "name": "Nunito",
                  "value": "Nunito"
                },
                {
                  "name": "Comfortaa",
                  "value": "Comfortaa"
                },
                {
                  "name": "Work Sans",
                  "value": "Work Sans"
                },
                {
                  "name": "Fjalla One",
                  "value": "Fjalla One"
                },
                {
                  "name": "Rubik",
                  "value": "Rubik"
                },
                {
                  "name": "Barlow",
                  "value": "Barlow"
                },
                {
                  "name": "Bebas Neue",
                  "value": "Bebas Neue"
                },
                {
                  "name": "Caveat",
                  "value": "Caveat"
                },
                {
                  "name": "Pacifico",
                  "value": "Pacifico"
                }
              ]
            },
            {
              "id": "title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "type": "string",
              "display": true,
              "canBeUsedToMatch": false
            },
            {
              "id": "quotes",
              "displayName": "Quotes (e.g. [\"item 1\", \"item 2\"])",
              "required": false,
              "defaultMatch": false,
              "type": "string",
              "display": true,
              "canBeUsedToMatch": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@blotato/n8n-nodes-blotato.blotatoTool",
      "typeVersion": 2,
      "position": [
        -1072,
        1264
      ],
      "id": "44c0f2a8-6d46-4b03-ac61-487bcf8ac7f7",
      "name": "Quote cards monocolor paper",
      "credentials": {
        "blotatoApi": {
          "id": "zI14DNda55rFeyY8",
          "name": "[S BRAND] Blotato"
        }
      }
    },
    {
      "parameters": {
        "resource": "video",
        "templateId": {
          "__rl": true,
          "value": "/base/v2/tweet-card/9714ae5c-7e6b-4878-be4a-4b1ba5d0cd66/v1",
          "mode": "list",
          "cachedResultName": "Twitter/X style quote cards with photo/video background"
        },
        "templateInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "verified": true,
            "cardPosition": "bottom",
            "handle": "sabrina_ramonov",
            "authorName": "Sabrina Ramonov",
            "quotes": "={{ $fromAI('Quotes__e_g____item_1____item_2___', ``, 'string').split(/\\n|\\|/).map(s => s.trim()).filter(Boolean) }}",
            "profileImage": "https://media.licdn.com/dms/image/v2/D5603AQEm4F3RHWnZ8w/profile-displayphoto-shrink_200_200/profile-displayphoto-shrink_200_200/0/1713795109052?e=2147483647&v=beta&t=dIuWBN1_U-vy1lccFxB65cRFWBOojkOghbKGmqZXXnc",
            "backgroundMedia": "https://www.google.com/url?sa=i&url=https%3A%2F%2Ftheworldtravelguy.com%2Fbest-utah-hiking-trails%2F&psig=AOvVaw3HfzPBC0uTaDlnIl5ErYMJ&ust=1757862025078000&source=images&cd=vfe&opi=89978449&ved=0CBYQjRxqFwoTCIDLlL-A1o8DFQAAAAAdAAAAABAE"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "backgroundMedia",
              "displayName": "Background Media (publicly accessible URL)",
              "required": false,
              "defaultMatch": false,
              "type": "string",
              "display": true,
              "canBeUsedToMatch": false
            },
            {
              "id": "quotes",
              "displayName": "Quotes (e.g. [\"item 1\", \"item 2\"])",
              "required": false,
              "defaultMatch": false,
              "type": "string",
              "display": true,
              "canBeUsedToMatch": false
            },
            {
              "id": "authorName",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "type": "string",
              "display": true,
              "canBeUsedToMatch": false
            },
            {
              "id": "handle",
              "displayName": "Social Media Handle",
              "required": false,
              "defaultMatch": false,
              "type": "string",
              "display": true,
              "canBeUsedToMatch": false
            },
            {
              "id": "profileImage",
              "displayName": "Profile Photo URL (publicly accessible URL)",
              "required": false,
              "defaultMatch": false,
              "type": "string",
              "display": true,
              "canBeUsedToMatch": false
            },
            {
              "id": "theme",
              "displayName": "Theme",
              "required": false,
              "defaultMatch": false,
              "type": "options",
              "display": true,
              "canBeUsedToMatch": false,
              "options": [
                {
                  "name": "Light",
                  "value": "light"
                },
                {
                  "name": "Dark",
                  "value": "dark"
                }
              ],
              "removed": true
            },
            {
              "id": "cardPosition",
              "displayName": "Card Position",
              "required": false,
              "defaultMatch": false,
              "type": "options",
              "display": true,
              "canBeUsedToMatch": false,
              "options": [
                {
                  "name": "Top",
                  "value": "top"
                },
                {
                  "name": "Middle",
                  "value": "middle"
                },
                {
                  "name": "Bottom",
                  "value": "bottom"
                }
              ]
            },
            {
              "id": "verified",
              "displayName": "Show Verified Badge",
              "required": false,
              "defaultMatch": false,
              "type": "boolean",
              "display": true,
              "canBeUsedToMatch": false
            },
            {
              "id": "enableBackdropBlur",
              "displayName": "Enable Backdrop Blur",
              "required": false,
              "defaultMatch": false,
              "type": "boolean",
              "display": true,
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "accentColor",
              "displayName": "Accent Background Color",
              "required": false,
              "defaultMatch": false,
              "type": "string",
              "display": true,
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "cardBackgroundColor",
              "displayName": "Card Background Color",
              "required": false,
              "defaultMatch": false,
              "type": "string",
              "display": true,
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "textColor",
              "displayName": "Text Color",
              "required": false,
              "defaultMatch": false,
              "type": "string",
              "display": true,
              "canBeUsedToMatch": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@blotato/n8n-nodes-blotato.blotatoTool",
      "typeVersion": 2,
      "position": [
        -896,
        1264
      ],
      "id": "f9de6c67-de20-479a-b941-bb4de4ec19ed",
      "name": "Tweet cards with photo background",
      "credentials": {
        "blotatoApi": {
          "id": "zI14DNda55rFeyY8",
          "name": "[S BRAND] Blotato"
        }
      }
    },
    {
      "parameters": {
        "resource": "video",
        "templateId": {
          "__rl": true,
          "value": "/base/v2/quote-card/f941e306-76f7-45da-b3d9-7463af630e91/v1",
          "mode": "list",
          "cachedResultName": "Quote Card Carousel with Paper Background and Highlight"
        },
        "templateInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "paperBackground": "Light paper",
            "font": "Philosopher",
            "title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Title', ``, 'string') }}",
            "quotes": "={{ $fromAI('Quotes__e_g____item_1____item_2___', ``, 'string').split(/\\n|\\|/).map(s => s.trim()).filter(Boolean) }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "font",
              "displayName": "Font",
              "required": false,
              "defaultMatch": false,
              "type": "options",
              "display": true,
              "canBeUsedToMatch": false,
              "options": [
                {
                  "name": "Inter",
                  "value": "Inter"
                },
                {
                  "name": "Merriweather",
                  "value": "Merriweather"
                },
                {
                  "name": "Roboto Mono",
                  "value": "Roboto Mono"
                },
                {
                  "name": "VT323",
                  "value": "VT323"
                },
                {
                  "name": "Montserrat",
                  "value": "Montserrat"
                },
                {
                  "name": "Quicksand",
                  "value": "Quicksand"
                },
                {
                  "name": "Philosopher",
                  "value": "Philosopher"
                },
                {
                  "name": "Poppins",
                  "value": "Poppins"
                },
                {
                  "name": "Raleway",
                  "value": "Raleway"
                },
                {
                  "name": "Open Sans",
                  "value": "Open Sans"
                },
                {
                  "name": "Lato",
                  "value": "Lato"
                },
                {
                  "name": "Oswald",
                  "value": "Oswald"
                },
                {
                  "name": "Playfair Display",
                  "value": "Playfair Display"
                },
                {
                  "name": "Roboto",
                  "value": "Roboto"
                },
                {
                  "name": "PT Sans",
                  "value": "PT Sans"
                },
                {
                  "name": "DM Sans",
                  "value": "DM Sans"
                },
                {
                  "name": "Nunito",
                  "value": "Nunito"
                },
                {
                  "name": "Comfortaa",
                  "value": "Comfortaa"
                },
                {
                  "name": "Work Sans",
                  "value": "Work Sans"
                },
                {
                  "name": "Fjalla One",
                  "value": "Fjalla One"
                },
                {
                  "name": "Rubik",
                  "value": "Rubik"
                },
                {
                  "name": "Barlow",
                  "value": "Barlow"
                },
                {
                  "name": "Bebas Neue",
                  "value": "Bebas Neue"
                },
                {
                  "name": "Caveat",
                  "value": "Caveat"
                },
                {
                  "name": "Pacifico",
                  "value": "Pacifico"
                }
              ]
            },
            {
              "id": "title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "type": "string",
              "display": true,
              "canBeUsedToMatch": false
            },
            {
              "id": "quotes",
              "displayName": "Quotes (e.g. [\"item 1\", \"item 2\"])",
              "required": false,
              "defaultMatch": false,
              "type": "string",
              "display": true,
              "canBeUsedToMatch": false
            },
            {
              "id": "highlighterColor",
              "displayName": "Highlighter Color",
              "required": false,
              "defaultMatch": false,
              "type": "string",
              "display": true,
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "paperBackground",
              "displayName": "Paper Background",
              "required": false,
              "defaultMatch": false,
              "type": "options",
              "display": true,
              "canBeUsedToMatch": false,
              "options": [
                {
                  "name": "White paper",
                  "value": "White paper"
                },
                {
                  "name": "Yellow paper",
                  "value": "Yellow paper"
                },
                {
                  "name": "Light paper",
                  "value": "Light paper"
                }
              ]
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@blotato/n8n-nodes-blotato.blotatoTool",
      "typeVersion": 2,
      "position": [
        -704,
        1264
      ],
      "id": "72e1afa3-7c0a-41da-b8fb-e2d83f24399e",
      "name": "Quote cards with highlight on paper",
      "credentials": {
        "blotatoApi": {
          "id": "zI14DNda55rFeyY8",
          "name": "[S BRAND] Blotato"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1584,
        1216
      ],
      "id": "4891e954-0bf4-47b7-b059-7cf8137f4ce2",
      "name": "ChatGPT",
      "credentials": {
        "openAiApi": {
          "id": "nN3d2hW6JDmQL1j8",
          "name": "[S BRAND] OpenAI"
        }
      }
    },
    {
      "parameters": {
        "platform": "pinterest",
        "accountId": {
          "__rl": true,
          "value": "358",
          "mode": "list",
          "cachedResultName": "sabrina_ramonov",
          "cachedResultUrl": "https://backend.blotato.com/v2/accounts/358"
        },
        "postContentText": "={{ $('AI Agent Carousel Maker').item.json.output.parseJson().caption }}",
        "postContentMediaUrls": "={{ $('Get carousel').item.json.item.imageUrls }}",
        "pinterestBoardId": {
          "__rl": true,
          "value": "1234",
          "mode": "id"
        },
        "postCreatePinterestOptionTitle": "={{ $('AI Agent Carousel Maker').item.json.output.parseJson().title }}",
        "options": {}
      },
      "type": "@blotato/n8n-nodes-blotato.blotato",
      "typeVersion": 2,
      "position": [
        576,
        1376
      ],
      "id": "bc3f7cf1-b63f-450e-aef8-60a705efb726",
      "name": "Pinterest [BLOTATO]",
      "credentials": {
        "blotatoApi": {
          "id": "zI14DNda55rFeyY8",
          "name": "[S BRAND] Blotato"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "# Get Instagram Carousel\n\n- ",
        "height": 436,
        "width": 624,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -400,
        816
      ],
      "id": "123171dc-a0e0-45f1-90fa-ca9439c7c1c2",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# Setup 1\n1. Select OpenAI credential\n2. Select Blotato credential",
        "height": 144,
        "width": 224,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1408,
        784
      ],
      "id": "3e37eda2-27a2-4b6d-820f-a87bf9d264ea",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "e511deb8-8e4c-45db-aa35-18f43a0552b6",
              "leftValue": "={{ $('Get carousel').item.json.item.status }}",
              "rightValue": "done",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        48,
        976
      ],
      "id": "3be9803e-5f30-4469-a310-8b009ea00074",
      "name": "If carousel ready"
    }
  ],
  "pinData": {},
  "connections": {
    "Tiktok [BLOTATO]": {
      "main": [
        [],
        [
          {
            "node": "Error Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Facebook [BLOTATO]": {
      "main": [
        [],
        [
          {
            "node": "Error Report",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Instagram [BLOTATO]": {
      "main": [
        [],
        [
          {
            "node": "Error Report",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Twitter [BLOTATO]": {
      "main": [
        [],
        [
          {
            "node": "Error Report",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "Get carousel": {
      "main": [
        [
          {
            "node": "If carousel ready",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent Carousel Maker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent Carousel Maker",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Get carousel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If quotes ready": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond to Chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Carousel Maker": {
      "main": [
        [
          {
            "node": "If quotes ready",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple tweet cards monocolor": {
      "ai_tool": [
        [
          {
            "node": "AI Agent Carousel Maker",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Quote cards monocolor paper": {
      "ai_tool": [
        [
          {
            "node": "AI Agent Carousel Maker",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Tweet cards with photo background": {
      "ai_tool": [
        [
          {
            "node": "AI Agent Carousel Maker",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Quote cards with highlight on paper": {
      "ai_tool": [
        [
          {
            "node": "AI Agent Carousel Maker",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "ChatGPT": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Carousel Maker",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If carousel ready": {
      "main": [
        [
          {
            "node": "Tiktok [BLOTATO]",
            "type": "main",
            "index": 0
          },
          {
            "node": "Facebook [BLOTATO]",
            "type": "main",
            "index": 0
          },
          {
            "node": "Instagram [BLOTATO]",
            "type": "main",
            "index": 0
          },
          {
            "node": "Twitter [BLOTATO]",
            "type": "main",
            "index": 0
          },
          {
            "node": "Pinterest [BLOTATO]",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7167860c-b1c4-4997-8ddb-4ced5375eeec",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e232d38e020fdf3e4c5aac7fdf84cd849e91ffb2c1ad80af1a4b16753ff64418"
  },
  "id": "IZnFEZhIiDvI9rKg",
  "tags": []
}